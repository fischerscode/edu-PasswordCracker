import 'dart:math';

import 'runner.dart';

/// Nutzt einen Linearen Kongruenzgenerator um alle pins in "zufÃ¤llgier" Reihenfolge zu testen.
/// https://de.wikipedia.org/wiki/Kongruenzgenerator#Linearer_Kongruenzgenerator)
class RandomBruteForceRunner extends BruteForceRunner {
  int get m => pow(10, inputController.pinLength()).toInt();
  late final int b;
  late final int a;

  RandomBruteForceRunner(super.inputController, super.speed) {
    b = _primes[Random().nextInt(_primes.length)];
    a = (m % 4 == 0 ? 20 : 10) * (Random().nextInt(m) + m) + 1;
  }

  @override
  List<int> get currentPin {
    return BruteForceRunner.getDigitsFromNumber(
        (a * pinCounter + b) % m, inputController.pinLength());
  }
}

const _primes = [
  104395303,
  104395337,
  104395349,
  104395373,
  104395387,
  104395393,
  104395427,
  104395429,
  104395441,
  104395451,
  104395457,
  104395493,
  104395573,
  104395579,
  104395591,
  104395609,
  104395649,
  104395661,
  104395663,
  104395699,
  104395723,
  104395729,
  104395741,
  104395751,
  104395757,
  104395769,
  104395771,
  104395777,
  104395801,
  104395847,
  104395859,
  104395877,
  104395891,
  104395901,
  104395903,
  104395909,
  104395933,
  104395987,
  104395999,
  104396029,
  104396041,
  104396077,
  104396081,
  104396087,
  104396093,
  104396101,
  104396107,
  104396161,
  104396179,
  104396183,
  104396191,
  104396213,
  104396221,
  104396231,
  104396233,
  104396239,
  104396249,
  104396261,
  104396267,
  104396297,
  104396309,
  104396339,
  104396363,
  104396381,
  104396387,
  104396399,
  104396419,
  104396441,
  104396443,
  104396459,
  104396477,
  104396489,
  104396521,
  104396531,
  104396557,
  104396569,
  104396599,
  104396627,
  104396641,
  104396657,
  104396689,
  104396693,
  104396707,
  104396713,
  104396717,
  104396737,
  104396753,
  104396771,
  104396843,
  104396861,
  104396879,
  104396891,
  104396899,
  104396927,
  104396939,
  104396953,
  104396959,
  104396969,
  104397049,
  104397067,
  104397101,
  104397107,
  104397109,
  104397127,
  104397143,
  104397149,
  104397173,
  104397179,
  104397247,
  104397259,
  104397269,
  104397329,
  104397331,
  104397341,
  104397347,
  104397389,
  104397407,
  104397443,
  104397463,
  104397467,
  104397497,
  104397509,
  104397523,
  104397541,
  104397547,
  104397551,
  104397563,
  104397583
];
